{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sara0\\\\HTML\\\\Works-in-Progress\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport Important from \"./components/project/Important\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navItems = [\"All\", \"Important\", \"Today\", \"Next week\", \"Completed\"];\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(\"Tasklist\");\n  const [isStar, setIsStar] = useState(false);\n\n  const handleTopNavClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddProject = e => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  const handleProjectTitle = e => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: tasks.length,\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      project: activeProject,\n      important: false,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    console.log(newTask);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          important: !task.important\n        };\n      }\n\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(updatedTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: [/*#__PURE__*/_jsxDEV(TopNav, {\n        children: navItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            onClick: handleTopNavClick,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectNav, {\n        children: projects.map(project => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"project-nav-item\",\n            onClick: handleProjectClick,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"type-project\",\n              placeholder: \"i.e. Summer Chores\",\n              onKeyPress: handleProjectTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"set-project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-project\",\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectHead, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n          title: activeProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputTask, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"type-task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task\",\n            onClick: handleAddTask,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tasklist, {\n        children: tasks.map(task => {\n          if (activeProject === \"All\") {\n            return /*#__PURE__*/_jsxDEV(Task, {\n              task: task,\n              tasks: tasks,\n              id: task.id,\n              title: task.title,\n              description: task.description,\n              dueDate: task.duedate,\n              completed: task.completed,\n              important: task.important,\n              children: /*#__PURE__*/_jsxDEV(Important, {\n                id: task.id,\n                onClick: () => handleImportance(task.id),\n                isStar: isStar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this);\n          } else {\n            if (task.project === activeProject) {\n              return /*#__PURE__*/_jsxDEV(Task, {\n                title: task.title,\n                description: task.description,\n                dueDate: task.duedate,\n                important: task.important,\n                completed: task.completed,\n                id: task.id,\n                children: /*#__PURE__*/_jsxDEV(Important, {\n                  id: task.id,\n                  onClick: () => handleImportance(task.id),\n                  isStar: isStar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this);\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RmqC6EPFTqQpyDlxd5HrWZuFFGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navigation","Project","TopNav","ProjectNav","ProjectHead","ProjectTitle","InputTask","Tasklist","Task","Important","navItems","App","tasks","setTasks","projects","setProjects","activeProject","setActiveProject","isStar","setIsStar","handleTopNavClick","e","target","textContent","handleAddProject","newProject","document","querySelector","handleProjectTitle","key","value","alert","style","display","parentElement","children","handleProjectClick","handleAddTask","inputTask","newTask","id","length","title","description","duedates","project","important","completed","console","log","focus","handleImportance","updatedTasks","map","task","item","duedate"],"sources":["C:/Users/sara0/HTML/Works-in-Progress/todo-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport Important from \"./components/project/Important\";\n\nconst navItems = [\"All\", \"Important\", \"Today\", \"Next week\", \"Completed\"];\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(\"Tasklist\");\n  const [isStar, setIsStar] = useState(false);\n\n  const handleTopNavClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddProject = (e) => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  const handleProjectTitle = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\n          \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n        );\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: tasks.length,\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      project: activeProject,\n      important: false,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n    console.log(newTask);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, important: !task.important };\n      }\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(updatedTasks);\n  };\n\n  return (\n    <div className=\"app\">\n      <Navigation>\n        <TopNav>\n          {navItems.map((item) => {\n            return (\n              <li className=\"nav-item\" onClick={handleTopNavClick}>\n                {item}\n              </li>\n            );\n          })}\n        </TopNav>\n        <ProjectNav>\n          {projects.map((project) => {\n            return (\n              <li className=\"project-nav-item\" onClick={handleProjectClick}>\n                <input\n                  type=\"text\"\n                  className=\"type-project\"\n                  placeholder=\"i.e. Summer Chores\"\n                  onKeyPress={handleProjectTitle}\n                />\n                <span className=\"set-project\"></span>\n              </li>\n            );\n          })}\n        </ProjectNav>\n        <button className=\"add-project\" onClick={handleAddProject}>\n          Add Project\n        </button>\n      </Navigation>\n      <Project>\n        <ProjectHead>\n          <ProjectTitle title={activeProject} />\n          <InputTask>\n            <input type=\"text\" className=\"type-task\" />\n            <button className=\"add-task\" onClick={handleAddTask}>\n              Add Task\n            </button>\n          </InputTask>\n        </ProjectHead>\n        <Tasklist>\n          {tasks.map((task) => {\n            if (activeProject === \"All\") {\n              return (\n                <Task\n                  task={task}\n                  tasks={tasks}\n                  id={task.id}\n                  title={task.title}\n                  description={task.description}\n                  dueDate={task.duedate}\n                  completed={task.completed}\n                  important={task.important}\n                >\n                  <Important\n                    id={task.id}\n                    onClick={() => handleImportance(task.id)}\n                    isStar={isStar}\n                  />\n                </Task>\n              );\n            } else {\n              if (task.project === activeProject) {\n                return (\n                  <Task\n                    title={task.title}\n                    description={task.description}\n                    dueDate={task.duedate}\n                    important={task.important}\n                    completed={task.completed}\n                    id={task.id}\n                  >\n                    <Important\n                      id={task.id}\n                      onClick={() => handleImportance(task.id)}\n                      isStar={isStar}\n                    />\n                  </Task>\n                );\n              }\n            }\n          })}\n        </Tasklist>\n      </Project>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}