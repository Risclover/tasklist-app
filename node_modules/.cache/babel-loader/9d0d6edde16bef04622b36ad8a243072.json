{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sara0\\\\HTML\\\\Works-in-Progress\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\"; // Components\n\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport TopNavItem from \"./components/navigation/TopNavItem\";\nimport Modal from \"./components/project/Modal\"; // Navigation items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\nconst todaysDate = function () {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n}; // Principle function\n\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // Array of task objects\n\n  const [projects, setProjects] = useState([\"Default Project\"]); // Array of projects\n\n  const [activeProject, setActiveProject] = useState(\"Tasklist\"); // Current active project\n\n  const [isStar, setIsStar] = useState(false);\n  const [taskId, setTaskId] = useState(); // Set active project when main nav items clicked\n\n  const handleTopNavClick = e => {\n    setActiveProject(e.target.textContent);\n  }; // 'Add Project' function\n\n\n  const addProject = e => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  }; // When user clicks on project title, they are (or aren't) able to edit the project title via \"invisible\" input box\n\n\n  const editProject = () => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n\n    if (activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\") {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitleInput.value = projectTitle.textContent;\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n      projectTitleInput.focus();\n    }\n  };\n\n  const handleProjectInput = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (e.key === \"Enter\") {\n      if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank.\");\n        projectTitle.textContent = activeProject;\n        projectTitleInput.value = activeProject;\n      } else {\n        projectTitle.textContent = projectTitleInput.value;\n        projectTitleInput.style.display = \"none\";\n        projectTitle.style.display = \"block\";\n        projectNavItems.forEach(item => {\n          if (item.textContent === activeProject) {\n            item.textContent = projectTitleInput.value;\n          }\n        });\n        tasks.forEach(task => {\n          if (task.project === activeProject) {\n            task.project = projectTitleInput.value;\n          }\n        });\n        setActiveProject(projectTitleInput.value);\n      }\n    }\n  };\n\n  const handleProjectBlur = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n      alert(\"ERROR: Project title cannot be blank.\");\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n      projectTitleInput.focus();\n    } else {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach(item => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach(task => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n    }\n  };\n\n  const handleProjectTitle = e => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectTitleBlur = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n    } else {\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n      setActiveProject(e.target.value);\n    }\n  };\n\n  const handleProjectClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const deleteProject = e => {\n    if (window.confirm(\"Are you sure you want to delete this project and all of its tasks?\")) {\n      const updatedTasks = tasks.filter(task => {\n        return task.project !== e.target.parentElement.parentElement.parentElement.children[0].children[1].textContent;\n      });\n      setTasks(updatedTasks);\n      e.target.parentElement.parentElement.parentElement.remove();\n    } else {\n      setActiveProject(e.target.parentElement.parentElement.parentElement.children[0].children[1].textContent);\n      console.log(activeProject);\n    }\n  };\n\n  const addTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: nanoid(),\n      title: inputTask.value,\n      description: \"\",\n      dueDate: \"\",\n      project: activeProject,\n      important: false,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          important: !task.important\n        };\n      }\n\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  function handleCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  const editTask = e => {\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[2].style.display = \"block\";\n    e.target.parentElement.children[2].value = e.target.textContent;\n    e.target.parentElement.children[2].focus();\n  };\n\n  const handleTaskInput = (e, id) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Task cannot be blank.\");\n        e.target.value = \"Please edit me.\";\n        tasks.forEach(task => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n      } else {\n        tasks.forEach(task => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n      }\n    }\n  };\n\n  const handleInputBlur = (e, id) => {\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\"ERROR: Task cannot be blank.\");\n      e.target.value = \"Please edit me.\";\n      tasks.forEach(task => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n    } else {\n      tasks.forEach(task => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n    }\n  };\n\n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      const updatedTasks = tasks.filter(task => {\n        return task.id !== id;\n      });\n      setTasks(updatedTasks);\n    }\n  };\n\n  const openModal = e => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n    modalFull.setAttribute(\"class\", `${e.target.parentElement.parentElement.id} modal-full`);\n    let modalTask = modalFull.getAttribute(\"class\");\n    tasks.forEach(task => {\n      if (task.id + \" modal-full\" === modalTask) {\n        modalTitle.value = task.title;\n        modalDescription.value = task.description;\n        modalDate.value = task.dueDate;\n      }\n    });\n    modalFull.style.display = \"block\";\n  };\n\n  const closeModal = e => {\n    const modalFull = document.querySelector(\".modal-full\");\n    modalFull.style.display = \"none\";\n  };\n\n  const submitModal = e => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n    let modalTask = modalFull.getAttribute(\"class\");\n\n    if (modalTitle.value === \"\" || modalTitle.value === \" \") {\n      alert(\"ERROR: Task title cannot be blank.\");\n    } else {\n      const updatedTasks = tasks.map(task => {\n        if (modalTask === task.id + \" modal-full\") {\n          return { ...task,\n            title: modalTitle.value,\n            description: modalDescription.value,\n            dueDate: modalDate.value\n          };\n        }\n\n        return task;\n      });\n      setTasks(updatedTasks);\n      console.log(updatedTasks);\n      modalFull.style.display = \"none\";\n    }\n  };\n\n  const taskList = tasks.map(task => {\n    if (activeProject === \"Today\") {\n      if (task.dueDate === todaysDate(\"-\")) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          title: task.title,\n          completed: task.completed,\n          important: task.important,\n          handleImportance: handleImportance,\n          handleCompleted: handleCompleted,\n          editTask: editTask,\n          handleTaskInput: handleTaskInput,\n          handleInputBlur: handleInputBlur,\n          deleteTask: deleteTask,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this);\n      }\n    } else if (activeProject === \"Completed\") {\n      if (task.completed === true) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          title: task.title,\n          completed: task.completed,\n          important: task.important,\n          handleImportance: handleImportance,\n          handleCompleted: handleCompleted,\n          editTask: editTask,\n          handleTaskInput: handleTaskInput,\n          handleInputBlur: handleInputBlur,\n          deleteTask: deleteTask,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this);\n      }\n    } else if (activeProject === \"Important\") {\n      if (task.important === true) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          title: task.title,\n          completed: task.completed,\n          important: task.important,\n          handleImportance: handleImportance,\n          handleCompleted: handleCompleted,\n          editTask: editTask,\n          handleTaskInput: handleTaskInput,\n          handleInputBlur: handleInputBlur,\n          deleteTask: deleteTask,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this);\n      }\n    } else if (activeProject === \"All\" && task.completed === false) {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        title: task.title,\n        completed: task.completed,\n        important: task.important,\n        handleImportance: handleImportance,\n        handleCompleted: handleCompleted,\n        editTask: editTask,\n        handleTaskInput: handleTaskInput,\n        handleInputBlur: handleInputBlur,\n        deleteTask: deleteTask,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (task.project === activeProject) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          title: task.title,\n          completed: task.completed,\n          important: task.important,\n          handleImportance: handleImportance,\n          handleCompleted: handleCompleted,\n          editTask: editTask,\n          handleTaskInput: handleTaskInput,\n          handleInputBlur: handleInputBlur,\n          deleteTask: deleteTask,\n          openModal: openModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: [/*#__PURE__*/_jsxDEV(TopNav, {\n        children: navItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(TopNavItem, {\n            item: item,\n            onClick: handleTopNavClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectNav, {\n        children: projects.map((project, index) => {\n          if (index === 0) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"project-nav-item\",\n              onClick: handleProjectClick,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"type-project\",\n                  placeholder: \"i.e. Summer Chores\",\n                  ref: input => input && input.focus(),\n                  onKeyPress: handleProjectTitle,\n                  onBlur: handleProjectTitleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"set-project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"project-nav-item\",\n              onClick: handleProjectClick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"type-project\",\n                  placeholder: \"i.e. Summer Chores\",\n                  ref: input => input && input.focus(),\n                  onKeyPress: handleProjectTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"set-project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"project-delete\",\n                onClick: deleteProject,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-project\",\n        onClick: addProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectHead, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n          onClick: editProject,\n          activeProject: activeProject,\n          handleProjectInput: handleProjectInput,\n          handleProjectBlur: handleProjectBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\" ? /*#__PURE__*/_jsxDEV(InputTask, {\n          activeProject: true,\n          onClick: addTask,\n          disabled: true,\n          onKeyPress: e => e.key === \"Enter\" ? addTask() : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputTask, {\n          activeProject: false,\n          onClick: addTask,\n          disabled: false,\n          onKeyPress: e => e.key === \"Enter\" ? addTask() : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tasklist, {\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      submitModal: submitModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XYOQdcn1ABu8hjDere+h3bDeSFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","nanoid","Navigation","Project","TopNav","ProjectNav","ProjectHead","ProjectTitle","InputTask","Tasklist","Task","TopNavItem","Modal","navItems","todaysDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","App","tasks","setTasks","projects","setProjects","activeProject","setActiveProject","isStar","setIsStar","taskId","setTaskId","handleTopNavClick","e","target","textContent","addProject","newProject","document","querySelector","editProject","projectTitleInput","projectTitle","alert","value","style","display","focus","handleProjectInput","projectNavItems","querySelectorAll","key","forEach","item","task","project","handleProjectBlur","handleProjectTitle","parentElement","children","handleProjectTitleBlur","handleProjectClick","deleteProject","window","confirm","updatedTasks","filter","remove","console","log","addTask","inputTask","newTask","id","title","description","dueDate","important","completed","handleImportance","map","handleCompleted","editTask","handleTaskInput","handleInputBlur","deleteTask","openModal","modalFull","modalTitle","modalDescription","modalDate","setAttribute","modalTask","getAttribute","closeModal","submitModal","taskList","index","input"],"sources":["C:/Users/sara0/HTML/Works-in-Progress/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\n\n// Components\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport TopNavItem from \"./components/navigation/TopNavItem\";\nimport Modal from \"./components/project/Modal\";\n\n// Navigation items\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\nconst todaysDate = (separator = \"\") => {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}`;\n};\n\n// Principle function\nfunction App() {\n  const [tasks, setTasks] = useState([]); // Array of task objects\n  const [projects, setProjects] = useState([\"Default Project\"]); // Array of projects\n  const [activeProject, setActiveProject] = useState(\"Tasklist\"); // Current active project\n  const [isStar, setIsStar] = useState(false);\n  const [taskId, setTaskId] = useState();\n\n  // Set active project when main nav items clicked\n  const handleTopNavClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  // 'Add Project' function\n  const addProject = (e) => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  // When user clicks on project title, they are (or aren't) able to edit the project title via \"invisible\" input box\n  const editProject = () => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    if (\n      activeProject === \"All\" ||\n      activeProject === \"Important\" ||\n      activeProject === \"Completed\" ||\n      activeProject === \"Today\" ||\n      activeProject === \"This Week\"\n    ) {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitleInput.value = projectTitle.textContent;\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n      projectTitleInput.focus();\n    }\n  };\n\n  const handleProjectInput = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (e.key === \"Enter\") {\n      if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank.\");\n        projectTitle.textContent = activeProject;\n        projectTitleInput.value = activeProject;\n      } else {\n        projectTitle.textContent = projectTitleInput.value;\n        projectTitleInput.style.display = \"none\";\n        projectTitle.style.display = \"block\";\n        projectNavItems.forEach((item) => {\n          if (item.textContent === activeProject) {\n            item.textContent = projectTitleInput.value;\n          }\n        });\n        tasks.forEach((task) => {\n          if (task.project === activeProject) {\n            task.project = projectTitleInput.value;\n          }\n        });\n        setActiveProject(projectTitleInput.value);\n      }\n    }\n  };\n\n  const handleProjectBlur = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n    if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n      alert(\"ERROR: Project title cannot be blank.\");\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n      projectTitleInput.focus();\n    } else {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach((item) => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach((task) => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n    }\n  };\n\n  const handleProjectTitle = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\n          \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n        );\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectTitleBlur = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\n        \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n      );\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n    } else {\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n      setActiveProject(e.target.value);\n    }\n  };\n\n  const handleProjectClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const deleteProject = (e) => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this project and all of its tasks?\"\n      )\n    ) {\n      const updatedTasks = tasks.filter((task) => {\n        return (\n          task.project !==\n          e.target.parentElement.parentElement.parentElement.children[0]\n            .children[1].textContent\n        );\n      });\n      setTasks(updatedTasks);\n      e.target.parentElement.parentElement.parentElement.remove();\n    } else {\n      setActiveProject(\n        e.target.parentElement.parentElement.parentElement.children[0]\n          .children[1].textContent\n      );\n      console.log(activeProject);\n    }\n  };\n\n  const addTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: nanoid(),\n      title: inputTask.value,\n      description: \"\",\n      dueDate: \"\",\n      project: activeProject,\n      important: false,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, important: !task.important };\n      }\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  function handleCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  const editTask = (e) => {\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[2].style.display = \"block\";\n    e.target.parentElement.children[2].value = e.target.textContent;\n    e.target.parentElement.children[2].focus();\n  };\n\n  const handleTaskInput = (e, id) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Task cannot be blank.\");\n        e.target.value = \"Please edit me.\";\n        tasks.forEach((task) => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n      } else {\n        tasks.forEach((task) => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n      }\n    }\n  };\n\n  const handleInputBlur = (e, id) => {\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\"ERROR: Task cannot be blank.\");\n      e.target.value = \"Please edit me.\";\n      tasks.forEach((task) => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n    } else {\n      tasks.forEach((task) => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n    }\n  };\n\n  const deleteTask = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      const updatedTasks = tasks.filter((task) => {\n        return task.id !== id;\n      });\n      setTasks(updatedTasks);\n    }\n  };\n\n  const openModal = (e) => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n\n    modalFull.setAttribute(\n      \"class\",\n      `${e.target.parentElement.parentElement.id} modal-full`\n    );\n\n    let modalTask = modalFull.getAttribute(\"class\");\n\n    tasks.forEach((task) => {\n      if (task.id + \" modal-full\" === modalTask) {\n        modalTitle.value = task.title;\n        modalDescription.value = task.description;\n        modalDate.value = task.dueDate;\n      }\n    });\n\n    modalFull.style.display = \"block\";\n  };\n\n  const closeModal = (e) => {\n    const modalFull = document.querySelector(\".modal-full\");\n    modalFull.style.display = \"none\";\n  };\n\n  const submitModal = (e) => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n\n    let modalTask = modalFull.getAttribute(\"class\");\n\n    if (modalTitle.value === \"\" || modalTitle.value === \" \") {\n      alert(\"ERROR: Task title cannot be blank.\");\n    } else {\n      const updatedTasks = tasks.map((task) => {\n        if (modalTask === task.id + \" modal-full\") {\n          return {\n            ...task,\n            title: modalTitle.value,\n            description: modalDescription.value,\n            dueDate: modalDate.value,\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n      console.log(updatedTasks);\n      modalFull.style.display = \"none\";\n    }\n  };\n\n  const taskList = tasks.map((task) => {\n    if (activeProject === \"Today\") {\n      if (task.dueDate === todaysDate(\"-\")) {\n        return (\n          <Task\n            id={task.id}\n            title={task.title}\n            completed={task.completed}\n            important={task.important}\n            handleImportance={handleImportance}\n            handleCompleted={handleCompleted}\n            editTask={editTask}\n            handleTaskInput={handleTaskInput}\n            handleInputBlur={handleInputBlur}\n            deleteTask={deleteTask}\n            openModal={openModal}\n          />\n        );\n      }\n    } else if (activeProject === \"Completed\") {\n      if (task.completed === true) {\n        return (\n          <Task\n            id={task.id}\n            title={task.title}\n            completed={task.completed}\n            important={task.important}\n            handleImportance={handleImportance}\n            handleCompleted={handleCompleted}\n            editTask={editTask}\n            handleTaskInput={handleTaskInput}\n            handleInputBlur={handleInputBlur}\n            deleteTask={deleteTask}\n            openModal={openModal}\n          />\n        );\n      }\n    } else if (activeProject === \"Important\") {\n      if (task.important === true) {\n        return (\n          <Task\n            id={task.id}\n            title={task.title}\n            completed={task.completed}\n            important={task.important}\n            handleImportance={handleImportance}\n            handleCompleted={handleCompleted}\n            editTask={editTask}\n            handleTaskInput={handleTaskInput}\n            handleInputBlur={handleInputBlur}\n            deleteTask={deleteTask}\n            openModal={openModal}\n          />\n        );\n      }\n    } else if (activeProject === \"All\" && task.completed === false) {\n      return (\n        <Task\n          id={task.id}\n          title={task.title}\n          completed={task.completed}\n          important={task.important}\n          handleImportance={handleImportance}\n          handleCompleted={handleCompleted}\n          editTask={editTask}\n          handleTaskInput={handleTaskInput}\n          handleInputBlur={handleInputBlur}\n          deleteTask={deleteTask}\n          openModal={openModal}\n        />\n      );\n    } else {\n      if (task.project === activeProject) {\n        return (\n          <Task\n            id={task.id}\n            title={task.title}\n            completed={task.completed}\n            important={task.important}\n            handleImportance={handleImportance}\n            handleCompleted={handleCompleted}\n            editTask={editTask}\n            handleTaskInput={handleTaskInput}\n            handleInputBlur={handleInputBlur}\n            deleteTask={deleteTask}\n            openModal={openModal}\n          />\n        );\n      }\n    }\n  });\n\n  return (\n    <div className=\"app\">\n      <Navigation>\n        <TopNav>\n          {navItems.map((item) => {\n            return <TopNavItem item={item} onClick={handleTopNavClick} />;\n          })}\n        </TopNav>\n        <ProjectNav>\n          {projects.map((project, index) => {\n            if (index === 0) {\n              return (\n                <li className=\"project-nav-item\" onClick={handleProjectClick}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"type-project\"\n                      placeholder=\"i.e. Summer Chores\"\n                      ref={(input) => input && input.focus()}\n                      onKeyPress={handleProjectTitle}\n                      onBlur={handleProjectTitleBlur}\n                    />\n                    <span className=\"set-project\"></span>\n                  </div>\n                </li>\n              );\n            } else {\n              return (\n                <li className=\"project-nav-item\" onClick={handleProjectClick}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"type-project\"\n                      placeholder=\"i.e. Summer Chores\"\n                      ref={(input) => input && input.focus()}\n                      onKeyPress={handleProjectTitle}\n                    />\n                    <span className=\"set-project\"></span>\n                  </div>\n                  <button className=\"project-delete\" onClick={deleteProject}>\n                    <i className=\"fa-solid fa-trash\"></i>\n                  </button>\n                </li>\n              );\n            }\n          })}\n        </ProjectNav>\n        <button className=\"add-project\" onClick={addProject}>\n          Add Project\n        </button>\n      </Navigation>\n      <Project>\n        <ProjectHead>\n          <ProjectTitle\n            onClick={editProject}\n            activeProject={activeProject}\n            handleProjectInput={handleProjectInput}\n            handleProjectBlur={handleProjectBlur}\n          />\n          {activeProject === \"All\" ||\n          activeProject === \"Important\" ||\n          activeProject === \"Completed\" ||\n          activeProject === \"Today\" ||\n          activeProject === \"This Week\" ? (\n            <InputTask\n              activeProject={true}\n              onClick={addTask}\n              disabled={true}\n              onKeyPress={(e) => (e.key === \"Enter\" ? addTask() : \"\")}\n            />\n          ) : (\n            <InputTask\n              activeProject={false}\n              onClick={addTask}\n              disabled={false}\n              onKeyPress={(e) => (e.key === \"Enter\" ? addTask() : \"\")}\n            />\n          )}\n        </ProjectHead>\n        <Tasklist>{taskList}</Tasklist>\n      </Project>\n      <Modal closeModal={closeModal} submitModal={submitModal} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}