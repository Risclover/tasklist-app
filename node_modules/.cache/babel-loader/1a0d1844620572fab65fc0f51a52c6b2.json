{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sara0\\\\HTML\\\\Works-in-Progress\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\"; // Components\n\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport Completed from \"./components/project/Completed\";\nimport ProjectNavItem from \"./components/navigation/ProjectNavItem\"; // Navigation items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"]; // Principle function\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // Array of task objects\n\n  const [projects, setProjects] = useState([\"Default Project\"]); // Array of projects\n\n  const [activeProject, setActiveProject] = useState(\"Tasklist\"); // Current active project\n\n  const [isStar, setIsStar] = useState(false); // Set active project when main nav items clicked\n\n  const handleTopNavClick = e => {\n    setActiveProject(e.target.textContent);\n  }; // 'Add Project' function\n\n\n  const handleAddProject = e => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  }; // When user clicks on project title, they are (or aren't) able to edit the project title via \"invisible\" input box\n\n\n  const handleProjectEdit = () => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n\n    if (activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\") {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitleInput.value = projectTitle.textContent;\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n      projectTitleInput.focus();\n    }\n  };\n\n  const handleProjectInput = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (e.key === \"Enter\") {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach(item => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach(task => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n    }\n  };\n\n  const handleProjectBlur = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n    projectTitle.textContent = projectTitleInput.value;\n    projectTitleInput.style.display = \"none\";\n    projectTitle.style.display = \"block\";\n    projectNavItems.forEach(item => {\n      if (item.textContent === activeProject) {\n        item.textContent = projectTitleInput.value;\n      }\n    });\n    tasks.forEach(task => {\n      if (task.project === activeProject) {\n        task.project = projectTitleInput.value;\n      }\n    });\n    setActiveProject(projectTitleInput.value);\n  };\n\n  const handleProjectTitle = e => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: tasks.length,\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      project: activeProject,\n      important: false,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          important: !task.important\n        };\n      }\n\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleCompleted = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const editTask = e => {\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[2].style.display = \"block\";\n    e.target.parentElement.children[2].value = e.target.textContent;\n    e.target.parentElement.children[2].focus();\n  };\n\n  const handleTaskInput = (e, id) => {\n    if (e.key === \"Enter\") {\n      tasks.forEach(task => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n    }\n  };\n\n  const handleInputBlur = (e, id) => {\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.title = e.target.value;\n      }\n    });\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[1].style.display = \"block\";\n    e.target.parentElement.children[1].textContent = e.target.value;\n  };\n\n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      const updatedTasks = tasks.filter(task => {\n        return task.id !== id;\n      });\n      setTasks(updatedTasks);\n    }\n  };\n\n  const handleProjectDeletion = e => {\n    if (window.confirm(\"Are you sure you want to delete this project and all of its tasks?\")) {\n      const updatedTasks = tasks.filter(task => {\n        return task.project !== e.target.parentElement.parentElement.parentElement.children[0].children[1].textContent;\n      });\n      setTasks(updatedTasks);\n      e.target.parentElement.parentElement.parentElement.remove();\n    }\n  };\n\n  const taskList = tasks.map(task => {\n    if (activeProject === \"Important\") {\n      if (task.important === true) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          title: task.title,\n          description: task.description,\n          dueDate: task.duedate,\n          completed: task.completed,\n          important: task.important,\n          handleImportance: handleImportance,\n          editTask: editTask,\n          handleTaskInput: handleTaskInput,\n          handleInputBlur: handleInputBlur,\n          deleteTask: deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this);\n      }\n    } else if (activeProject === \"All\") {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        title: task.title,\n        description: task.description,\n        dueDate: task.duedate,\n        completed: task.completed,\n        important: task.important,\n        handleImportance: handleImportance,\n        editTask: editTask,\n        handleTaskInput: handleTaskInput,\n        handleInputBlur: handleInputBlur,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (task.project === activeProject) {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          title: task.title,\n          description: task.description,\n          dueDate: task.duedate,\n          completed: task.completed,\n          important: task.important,\n          handleImportance: handleImportance,\n          editTask: editTask,\n          handleTaskInput: handleTaskInput,\n          handleInputBlur: handleInputBlur,\n          deleteTask: deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: [/*#__PURE__*/_jsxDEV(TopNav, {\n        children: navItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            onClick: handleTopNavClick,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectNav, {\n        children: projects.map((project, index) => {\n          return /*#__PURE__*/_jsxDEV(ProjectNavItem, {\n            onClick: e => handleProjectClick(e),\n            handleProjectTitle: handleProjectTitle,\n            handleProjectDeletion: handleProjectDeletion,\n            index: index,\n            deleteBtn: index === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"project-delete\",\n              onClick: e => handleProjectDeletion(e),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-project\",\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectHead, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n          onClick: handleProjectEdit,\n          activeProject: activeProject,\n          handleProjectInput: handleProjectInput,\n          handleProjectBlur: handleProjectBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\" ? /*#__PURE__*/_jsxDEV(InputTask, {\n          activeProject: true,\n          onClick: handleAddTask,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputTask, {\n          activeProject: false,\n          onClick: handleAddTask,\n          disabled: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tasklist, {\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ClMGVula3LOZPn0WJ8eqEKHydQc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navigation","Project","TopNav","ProjectNav","ProjectHead","ProjectTitle","InputTask","Tasklist","Task","Completed","ProjectNavItem","navItems","App","tasks","setTasks","projects","setProjects","activeProject","setActiveProject","isStar","setIsStar","handleTopNavClick","e","target","textContent","handleAddProject","newProject","document","querySelector","handleProjectEdit","projectTitleInput","projectTitle","alert","value","style","display","focus","handleProjectInput","projectNavItems","querySelectorAll","key","forEach","item","task","project","handleProjectBlur","handleProjectTitle","parentElement","children","handleProjectClick","handleAddTask","inputTask","newTask","id","length","title","description","duedates","important","completed","handleImportance","updatedTasks","map","handleCompleted","editTask","handleTaskInput","handleInputBlur","deleteTask","window","confirm","filter","handleProjectDeletion","remove","taskList","duedate","index"],"sources":["C:/Users/sara0/HTML/Works-in-Progress/todo-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// Components\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport Completed from \"./components/project/Completed\";\nimport ProjectNavItem from \"./components/navigation/ProjectNavItem\";\n\n// Navigation items\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\n// Principle function\nfunction App() {\n  const [tasks, setTasks] = useState([]); // Array of task objects\n  const [projects, setProjects] = useState([\"Default Project\"]); // Array of projects\n  const [activeProject, setActiveProject] = useState(\"Tasklist\"); // Current active project\n  const [isStar, setIsStar] = useState(false);\n\n  // Set active project when main nav items clicked\n  const handleTopNavClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  // 'Add Project' function\n  const handleAddProject = (e) => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  // When user clicks on project title, they are (or aren't) able to edit the project title via \"invisible\" input box\n  const handleProjectEdit = () => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    if (\n      activeProject === \"All\" ||\n      activeProject === \"Important\" ||\n      activeProject === \"Completed\" ||\n      activeProject === \"Today\" ||\n      activeProject === \"This Week\"\n    ) {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitleInput.value = projectTitle.textContent;\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n      projectTitleInput.focus();\n    }\n  };\n\n  const handleProjectInput = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (e.key === \"Enter\") {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach((item) => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach((task) => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n    }\n  };\n\n  const handleProjectBlur = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n    projectTitle.textContent = projectTitleInput.value;\n    projectTitleInput.style.display = \"none\";\n    projectTitle.style.display = \"block\";\n    projectNavItems.forEach((item) => {\n      if (item.textContent === activeProject) {\n        item.textContent = projectTitleInput.value;\n      }\n    });\n    tasks.forEach((task) => {\n      if (task.project === activeProject) {\n        task.project = projectTitleInput.value;\n      }\n    });\n    setActiveProject(projectTitleInput.value);\n  };\n\n  const handleProjectTitle = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\n          \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n        );\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: tasks.length,\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      project: activeProject,\n      important: false,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, important: !task.important };\n      }\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleCompleted = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const editTask = (e) => {\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[2].style.display = \"block\";\n    e.target.parentElement.children[2].value = e.target.textContent;\n    e.target.parentElement.children[2].focus();\n  };\n\n  const handleTaskInput = (e, id) => {\n    if (e.key === \"Enter\") {\n      tasks.forEach((task) => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n    }\n  };\n\n  const handleInputBlur = (e, id) => {\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.title = e.target.value;\n      }\n    });\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[1].style.display = \"block\";\n    e.target.parentElement.children[1].textContent = e.target.value;\n  };\n\n  const deleteTask = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      const updatedTasks = tasks.filter((task) => {\n        return task.id !== id;\n      });\n      setTasks(updatedTasks);\n    }\n  };\n\n  const handleProjectDeletion = (e) => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this project and all of its tasks?\"\n      )\n    ) {\n      const updatedTasks = tasks.filter((task) => {\n        return (\n          task.project !==\n          e.target.parentElement.parentElement.parentElement.children[0]\n            .children[1].textContent\n        );\n      });\n      setTasks(updatedTasks);\n      e.target.parentElement.parentElement.parentElement.remove();\n    }\n  };\n\n  const taskList = tasks.map((task) => {\n    if (activeProject === \"Important\") {\n      if (task.important === true) {\n        return (\n          <Task\n            id={task.id}\n            title={task.title}\n            description={task.description}\n            dueDate={task.duedate}\n            completed={task.completed}\n            important={task.important}\n            handleImportance={handleImportance}\n            editTask={editTask}\n            handleTaskInput={handleTaskInput}\n            handleInputBlur={handleInputBlur}\n            deleteTask={deleteTask}\n          />\n        );\n      }\n    } else if (activeProject === \"All\") {\n      return (\n        <Task\n          id={task.id}\n          title={task.title}\n          description={task.description}\n          dueDate={task.duedate}\n          completed={task.completed}\n          important={task.important}\n          handleImportance={handleImportance}\n          editTask={editTask}\n          handleTaskInput={handleTaskInput}\n          handleInputBlur={handleInputBlur}\n          deleteTask={deleteTask}\n        />\n      );\n    } else {\n      if (task.project === activeProject) {\n        return (\n          <Task\n            id={task.id}\n            title={task.title}\n            description={task.description}\n            dueDate={task.duedate}\n            completed={task.completed}\n            important={task.important}\n            handleImportance={handleImportance}\n            editTask={editTask}\n            handleTaskInput={handleTaskInput}\n            handleInputBlur={handleInputBlur}\n            deleteTask={deleteTask}\n          />\n        );\n      }\n    }\n  });\n\n  return (\n    <div className=\"app\">\n      <Navigation>\n        <TopNav>\n          {navItems.map((item) => {\n            return (\n              <li className=\"nav-item\" onClick={handleTopNavClick}>\n                {item}\n              </li>\n            );\n          })}\n        </TopNav>\n        <ProjectNav>\n          {projects.map((project, index) => {\n            return (\n              <ProjectNavItem\n                onClick={(e) => handleProjectClick(e)}\n                handleProjectTitle={handleProjectTitle}\n                handleProjectDeletion={handleProjectDeletion}\n                index={index}\n                deleteBtn={\n                  index === 0 ? (\n                    <button\n                      className=\"project-delete\"\n                      onClick={(e) => handleProjectDeletion(e)}\n                    >\n                      <i className=\"fa-solid fa-trash\"></i>\n                    </button>\n                  ) : (\n                    \"\"\n                  )\n                }\n              />\n            );\n          })}\n        </ProjectNav>\n        <button className=\"add-project\" onClick={handleAddProject}>\n          Add Project\n        </button>\n      </Navigation>\n      <Project>\n        <ProjectHead>\n          <ProjectTitle\n            onClick={handleProjectEdit}\n            activeProject={activeProject}\n            handleProjectInput={handleProjectInput}\n            handleProjectBlur={handleProjectBlur}\n          />\n          {activeProject === \"All\" ||\n          activeProject === \"Important\" ||\n          activeProject === \"Completed\" ||\n          activeProject === \"Today\" ||\n          activeProject === \"This Week\" ? (\n            <InputTask\n              activeProject={true}\n              onClick={handleAddTask}\n              disabled={true}\n            />\n          ) : (\n            <InputTask\n              activeProject={false}\n              onClick={handleAddTask}\n              disabled={false}\n            />\n          )}\n        </ProjectHead>\n        <Tasklist>{taskList}</Tasklist>\n      </Project>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}