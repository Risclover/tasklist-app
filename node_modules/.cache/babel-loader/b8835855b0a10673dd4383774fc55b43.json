{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sara0\\\\HTML\\\\Works-in-Progress\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n\n  const handleAddProject = e => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  const handleProjectTitle = e => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      }\n    }\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      important: false,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectNav, {\n        children: projects.map(project => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            clasName: \"project-nav-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"type-project\",\n              placeholder: \"i.e. Summer Chores\",\n              onKeyPress: handleProjectTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"set-project\",\n              children: project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-project\",\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectHead, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputTask, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"type-task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task\",\n            onClick: handleAddTask,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tasklist, {\n        children: tasks.map(task => {\n          return /*#__PURE__*/_jsxDEV(Task, {\n            title: task.title,\n            description: task.description,\n            dueDate: task.duedate,\n            important: task.important,\n            completed: task.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pH8VS5j6Oo/iqWq/gm3TUvAxkV4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navigation","Project","TopNav","ProjectNav","ProjectHead","ProjectTitle","InputTask","Tasklist","Task","App","tasks","setTasks","projects","setProjects","handleAddProject","e","newProject","document","querySelector","handleProjectTitle","key","target","value","alert","handleAddTask","inputTask","newTask","title","description","duedates","important","completed","focus","map","project","task","duedate"],"sources":["C:/Users/sara0/HTML/Works-in-Progress/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n\n  const handleAddProject = (e) => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  const handleProjectTitle = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\n          \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n        );\n      }\n    }\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      important: false,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  return (\n    <div className=\"app\">\n      <Navigation>\n        <TopNav></TopNav>\n        <ProjectNav>\n          {projects.map((project) => {\n            return (\n              <li clasName=\"project-nav-item\">\n                <input\n                  type=\"text\"\n                  className=\"type-project\"\n                  placeholder=\"i.e. Summer Chores\"\n                  onKeyPress={handleProjectTitle}\n                />\n                <span className=\"set-project\">{project}</span>\n              </li>\n            );\n          })}\n        </ProjectNav>\n        <button className=\"add-project\" onClick={handleAddProject}>\n          Add Project\n        </button>\n      </Navigation>\n      <Project>\n        <ProjectHead>\n          <ProjectTitle />\n          <InputTask>\n            <input type=\"text\" className=\"type-task\" />\n            <button className=\"add-task\" onClick={handleAddTask}>\n              Add Task\n            </button>\n          </InputTask>\n        </ProjectHead>\n        <Tasklist>\n          {tasks.map((task) => {\n            return (\n              <Task\n                title={task.title}\n                description={task.description}\n                dueDate={task.duedate}\n                important={task.important}\n                completed={task.completed}\n              />\n            );\n          })}\n        </Tasklist>\n      </Project>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}