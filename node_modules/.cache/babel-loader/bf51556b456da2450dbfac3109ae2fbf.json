{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sara0\\\\HTML\\\\Works-in-Progress\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\"; // Components\n\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport TopNavItem from \"./components/navigation/TopNavItem\";\nimport Modal from \"./components/project/Modal\";\nimport Completed from \"./components/project/Completed\"; // Navigation items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\nconst todaysDate = function () {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n}; // Principle function\n\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([props.tasks]); // Array of task objects\n\n  const [projects, setProjects] = useState([props.projects]); // Array of projects\n\n  const [activeProject, setActiveProject] = useState(\"Tasklist\"); // Current active project\n\n  const [isStar, setIsStar] = useState(false);\n  const [taskCount, setTaskCount] = useState(0);\n  const [importantCount, setImportantCount] = useState(0);\n  const [todayCount, setTodayCount] = useState(0);\n  const [weekCount, setWeekCount] = useState(0);\n  const [completedTaskCount, setCompletedTaskCount] = useState(0);\n  const [filter, setFilter] = useState(\"All\");\n  const FILTER_MAP = {\n    All: task => !task.completed,\n    Important: task => task.important,\n    Completed: task => task.completed,\n    Today: task => task.dueDate === todaysDate(\"-\")\n  }; // Set active project when main nav items clicked\n\n  const handleTopNavClick = e => {\n    setActiveProject(e.target.textContent);\n  }; // 'Add Project' function\n\n\n  const addProject = e => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n    localStorage.setItem(\"projects\", JSON.stringify(projects));\n  }; // When user clicks on project title, they are (or aren't) able to edit the project title via \"invisible\" input box\n\n\n  const editProject = () => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n\n    if (activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\") {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitleInput.value = projectTitle.textContent;\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n      projectTitleInput.focus();\n    }\n  };\n\n  const handleProjectInput = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (e.key === \"Enter\") {\n      if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank.\");\n        projectTitle.textContent = activeProject;\n        projectTitleInput.value = activeProject;\n      } else {\n        projectTitle.textContent = projectTitleInput.value;\n        projectTitleInput.style.display = \"none\";\n        projectTitle.style.display = \"block\";\n        projectNavItems.forEach(item => {\n          if (item.textContent === activeProject) {\n            item.textContent = projectTitleInput.value;\n          }\n        });\n        tasks.forEach(task => {\n          if (task.project === activeProject) {\n            task.project = projectTitleInput.value;\n          }\n        });\n        setActiveProject(projectTitleInput.value);\n        localStorage.setItem(\"projects\", JSON.stringify(projectNavItems));\n      }\n    }\n  };\n\n  const handleProjectBlur = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n      alert(\"ERROR: Project title cannot be blank.\");\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n      projectTitleInput.focus();\n    } else {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach(item => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach(task => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n    }\n  };\n\n  const handleProjectTitle = e => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectTitleBlur = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n    } else {\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n      setActiveProject(e.target.value);\n    }\n  };\n\n  const handleProjectClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const deleteProject = e => {\n    if (window.confirm(\"Are you sure you want to delete this project and all of its tasks?\")) {\n      const updatedTasks = tasks.filter(task => {\n        return task.project !== e.target.parentElement.parentElement.parentElement.children[0].children[1].textContent;\n      });\n      setTasks(updatedTasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n      e.target.parentElement.parentElement.parentElement.remove();\n    } else {\n      setActiveProject(e.target.parentElement.parentElement.parentElement.children[0].children[1].chidlren[0].children[0].textContent);\n      console.log(activeProject);\n    }\n  };\n\n  const addTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n\n    if (inputTask.value === \"\" || inputTask.value === \" \") {\n      alert(\"ERROR: Task title cannot be blank.\");\n    } else {\n      setTaskCount(taskCount + 1);\n      const newTask = {\n        id: nanoid(),\n        title: inputTask.value,\n        description: \"\",\n        dueDate: \"\",\n        project: activeProject,\n        important: false,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        if (!task.important) {\n          setImportantCount(importantCount + 1);\n        } else {\n          setImportantCount(importantCount - 1);\n        }\n\n        return { ...task,\n          important: !task.important\n        };\n      }\n\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n\n  function handleCompleted(id, project) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        if (!task.completed) {\n          setCompletedTaskCount(completedTaskCount + 1);\n          setTaskCount(taskCount - 1);\n\n          if (task.important) {\n            setImportantCount(importantCount - 1);\n          }\n        } else {\n          setCompletedTaskCount(completedTaskCount - 1);\n          setTaskCount(taskCount + 1);\n\n          if (task.important) {\n            setImportantCount(importantCount + 1);\n          }\n        }\n\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  }\n\n  const editTask = e => {\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[1].style.display = \"block\";\n    e.target.parentElement.children[1].value = e.target.textContent;\n    e.target.parentElement.children[1].focus();\n  };\n\n  const handleTaskInput = (e, id) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Task cannot be blank.\");\n        e.target.value = \"Please edit me.\";\n        tasks.forEach(task => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[0].style.display = \"block\";\n        e.target.parentElement.children[0].textContent = e.target.value;\n      } else {\n        tasks.forEach(task => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[0].style.display = \"block\";\n        e.target.parentElement.children[0].textContent = e.target.value;\n      }\n    }\n  };\n\n  const handleInputBlur = (e, id) => {\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\"ERROR: Task cannot be blank.\");\n      e.target.value = \"Please edit me.\";\n      tasks.forEach(task => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[0].style.display = \"block\";\n      e.target.parentElement.children[0].textContent = e.target.value;\n    } else {\n      tasks.forEach(task => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[0].style.display = \"block\";\n      e.target.parentElement.children[0].textContent = e.target.value;\n    }\n  };\n\n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setTaskCount(taskCount - 1);\n      const updatedTasks = tasks.filter(task => {\n        return task.id !== id;\n      });\n      setTasks(updatedTasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    }\n  };\n\n  const openModal = e => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n    modalFull.setAttribute(\"class\", `${e.target.parentElement.parentElement.id} modal-full`);\n    let modalTask = modalFull.getAttribute(\"class\");\n    tasks.forEach(task => {\n      if (task.id + \" modal-full\" === modalTask) {\n        modalTitle.value = task.title;\n        modalDescription.value = task.description;\n        modalDate.value = task.dueDate;\n      }\n    });\n    modalFull.style.display = \"block\";\n  };\n\n  const closeModal = e => {\n    const modalFull = document.querySelector(\".modal-full\");\n    modalFull.style.display = \"none\";\n  };\n\n  const submitModal = e => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n    let modalTask = modalFull.getAttribute(\"class\");\n\n    if (modalTitle.value === \"\" || modalTitle.value === \" \") {\n      alert(\"ERROR: Task title cannot be blank.\");\n    } else {\n      const updatedTasks = tasks.map(task => {\n        if (modalTask === task.id + \" modal-full\") {\n          return { ...task,\n            title: modalTitle.value,\n            description: modalDescription.value,\n            dueDate: modalDate.value\n          };\n        }\n\n        return task;\n      });\n      setTasks(updatedTasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n      console.log(updatedTasks);\n      modalFull.style.display = \"none\";\n    }\n  };\n\n  const taskList = tasks.map(task => {\n    if (!task.completed && (task.important === true && activeProject === \"Important\" || task.dueDate === todaysDate(\"-\") && activeProject === \"Today\" || activeProject === \"All\") || task.completed && activeProject === \"Completed\" || activeProject === task.project) {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        title: task.title,\n        completed: task.completed,\n        important: task.important,\n        dueDate: task.dueDate,\n        description: task.description,\n        handleImportance: handleImportance,\n        handleCompleted: handleCompleted,\n        editTask: editTask,\n        handleTaskInput: handleTaskInput,\n        handleInputBlur: handleInputBlur,\n        deleteTask: deleteTask,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  const completedList = tasks.map(task => {\n    if (task.project === activeProject && task.completed === true) {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        id: task.id,\n        title: task.title,\n        completed: task.completed,\n        important: task.important,\n        dueDate: task.dueDate,\n        description: task.description,\n        handleImportance: handleImportance,\n        handleCompleted: handleCompleted,\n        editTask: editTask,\n        handleTaskInput: handleTaskInput,\n        handleInputBlur: handleInputBlur,\n        deleteTask: deleteTask,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  /*const filterList = FILTER_MAP.map((name) => (\n    <TopNav name={name} setFilter={setFilter} isPressed={name === filter} />\n  ));*/\n\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectNav, {\n        children: projects.map((project, index) => {\n          if (index === 0) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"project-nav-item\",\n              onClick: handleProjectClick,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"type-project\",\n                  placeholder: \"i.e. Summer Chores\",\n                  ref: input => input && input.focus(),\n                  onKeyPress: handleProjectTitle,\n                  onBlur: handleProjectTitleBlur\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"set-project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"project-nav-item\",\n              onClick: handleProjectClick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"type-project\",\n                  placeholder: \"i.e. Summer Chores\",\n                  ref: input => input && input.focus(),\n                  onKeyPress: handleProjectTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"set-project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"project-delete\",\n                onClick: deleteProject,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-project\",\n        onClick: addProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectHead, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n          onClick: editProject,\n          activeProject: activeProject,\n          handleProjectInput: handleProjectInput,\n          handleProjectBlur: handleProjectBlur,\n          completedCount: completedTaskCount,\n          importantCount: importantCount,\n          taskCount: taskCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\" ? /*#__PURE__*/_jsxDEV(InputTask, {\n          activeProject: true,\n          onClick: addTask,\n          disabled: true,\n          onKeyPress: e => e.key === \"Enter\" ? addTask() : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputTask, {\n          activeProject: false,\n          onClick: addTask,\n          disabled: false,\n          onKeyPress: e => e.key === \"Enter\" ? addTask() : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasklist\",\n        children: [/*#__PURE__*/_jsxDEV(Tasklist, {\n          children: taskList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), activeProject !== \"All\" && activeProject !== \"Today\" && activeProject !== \"This Week\" && activeProject !== \"Important\" && activeProject !== \"Completed\" && tasks.map(task => task.completed && task.project === activeProject) ? /*#__PURE__*/_jsxDEV(Completed, {\n          children: completedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      submitModal: submitModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UfJAqBMhXZPxekXuskekOqk3mLs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","nanoid","Navigation","Project","TopNav","ProjectNav","ProjectHead","ProjectTitle","InputTask","Tasklist","Task","TopNavItem","Modal","Completed","navItems","todaysDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","App","props","tasks","setTasks","projects","setProjects","activeProject","setActiveProject","isStar","setIsStar","taskCount","setTaskCount","importantCount","setImportantCount","todayCount","setTodayCount","weekCount","setWeekCount","completedTaskCount","setCompletedTaskCount","filter","setFilter","FILTER_MAP","All","task","completed","Important","important","Today","dueDate","handleTopNavClick","e","target","textContent","addProject","newProject","document","querySelector","localStorage","setItem","JSON","stringify","editProject","projectTitleInput","projectTitle","alert","value","style","display","focus","handleProjectInput","projectNavItems","querySelectorAll","key","forEach","item","project","handleProjectBlur","handleProjectTitle","parentElement","children","handleProjectTitleBlur","handleProjectClick","deleteProject","window","confirm","updatedTasks","remove","chidlren","console","log","addTask","inputTask","newTask","id","title","description","handleImportance","map","handleCompleted","editTask","handleTaskInput","handleInputBlur","deleteTask","openModal","modalFull","modalTitle","modalDescription","modalDate","setAttribute","modalTask","getAttribute","closeModal","submitModal","taskList","completedList","index","input"],"sources":["C:/Users/sara0/HTML/Works-in-Progress/todo-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\n\n// Components\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport TopNavItem from \"./components/navigation/TopNavItem\";\nimport Modal from \"./components/project/Modal\";\nimport Completed from \"./components/project/Completed\";\n\n// Navigation items\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\nconst todaysDate = (separator = \"\") => {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}`;\n};\n\n// Principle function\nfunction App(props) {\n  const [tasks, setTasks] = useState([props.tasks]); // Array of task objects\n  const [projects, setProjects] = useState([props.projects]); // Array of projects\n  const [activeProject, setActiveProject] = useState(\"Tasklist\"); // Current active project\n  const [isStar, setIsStar] = useState(false);\n  const [taskCount, setTaskCount] = useState(0);\n  const [importantCount, setImportantCount] = useState(0);\n  const [todayCount, setTodayCount] = useState(0);\n  const [weekCount, setWeekCount] = useState(0);\n  const [completedTaskCount, setCompletedTaskCount] = useState(0);\n  const [filter, setFilter] = useState(\"All\");\n\n  const FILTER_MAP = {\n    All: (task) => !task.completed,\n    Important: (task) => task.important,\n    Completed: (task) => task.completed,\n    Today: (task) => task.dueDate === todaysDate(\"-\"),\n  };\n\n  // Set active project when main nav items clicked\n  const handleTopNavClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  // 'Add Project' function\n  const addProject = (e) => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n    localStorage.setItem(\"projects\", JSON.stringify(projects));\n  };\n\n  // When user clicks on project title, they are (or aren't) able to edit the project title via \"invisible\" input box\n  const editProject = () => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    if (\n      activeProject === \"All\" ||\n      activeProject === \"Important\" ||\n      activeProject === \"Completed\" ||\n      activeProject === \"Today\" ||\n      activeProject === \"This Week\"\n    ) {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitleInput.value = projectTitle.textContent;\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n      projectTitleInput.focus();\n    }\n  };\n\n  const handleProjectInput = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n\n    if (e.key === \"Enter\") {\n      if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank.\");\n        projectTitle.textContent = activeProject;\n        projectTitleInput.value = activeProject;\n      } else {\n        projectTitle.textContent = projectTitleInput.value;\n        projectTitleInput.style.display = \"none\";\n        projectTitle.style.display = \"block\";\n        projectNavItems.forEach((item) => {\n          if (item.textContent === activeProject) {\n            item.textContent = projectTitleInput.value;\n          }\n        });\n        tasks.forEach((task) => {\n          if (task.project === activeProject) {\n            task.project = projectTitleInput.value;\n          }\n        });\n        setActiveProject(projectTitleInput.value);\n        localStorage.setItem(\"projects\", JSON.stringify(projectNavItems));\n      }\n    }\n  };\n\n  const handleProjectBlur = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".set-project\");\n    if (projectTitleInput.value === \"\" || projectTitleInput.value === \" \") {\n      alert(\"ERROR: Project title cannot be blank.\");\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n      projectTitleInput.focus();\n    } else {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach((item) => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach((task) => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n    }\n  };\n\n  const handleProjectTitle = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\n          \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n        );\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectTitleBlur = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\n        \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n      );\n      projectTitle.textContent = activeProject;\n      projectTitleInput.value = activeProject;\n    } else {\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[1].style.display = \"block\";\n      e.target.parentElement.children[1].textContent = e.target.value;\n      setActiveProject(e.target.value);\n    }\n  };\n\n  const handleProjectClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const deleteProject = (e) => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this project and all of its tasks?\"\n      )\n    ) {\n      const updatedTasks = tasks.filter((task) => {\n        return (\n          task.project !==\n          e.target.parentElement.parentElement.parentElement.children[0]\n            .children[1].textContent\n        );\n      });\n      setTasks(updatedTasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n      e.target.parentElement.parentElement.parentElement.remove();\n    } else {\n      setActiveProject(\n        e.target.parentElement.parentElement.parentElement.children[0]\n          .children[1].chidlren[0].children[0].textContent\n      );\n      console.log(activeProject);\n    }\n  };\n\n  const addTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    if (inputTask.value === \"\" || inputTask.value === \" \") {\n      alert(\"ERROR: Task title cannot be blank.\");\n    } else {\n      setTaskCount(taskCount + 1);\n      const newTask = {\n        id: nanoid(),\n        title: inputTask.value,\n        description: \"\",\n        dueDate: \"\",\n        project: activeProject,\n        important: false,\n        completed: false,\n      };\n      setTasks([...tasks, newTask]);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        if (!task.important) {\n          setImportantCount(importantCount + 1);\n        } else {\n          setImportantCount(importantCount - 1);\n        }\n        return { ...task, important: !task.important };\n      }\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n\n  function handleCompleted(id, project) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        if (!task.completed) {\n          setCompletedTaskCount(completedTaskCount + 1);\n          setTaskCount(taskCount - 1);\n\n          if (task.important) {\n            setImportantCount(importantCount - 1);\n          }\n        } else {\n          setCompletedTaskCount(completedTaskCount - 1);\n          setTaskCount(taskCount + 1);\n\n          if (task.important) {\n            setImportantCount(importantCount + 1);\n          }\n        }\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  }\n\n  const editTask = (e) => {\n    e.target.style.display = \"none\";\n    e.target.parentElement.children[1].style.display = \"block\";\n    e.target.parentElement.children[1].value = e.target.textContent;\n    e.target.parentElement.children[1].focus();\n  };\n\n  const handleTaskInput = (e, id) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Task cannot be blank.\");\n        e.target.value = \"Please edit me.\";\n        tasks.forEach((task) => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[0].style.display = \"block\";\n        e.target.parentElement.children[0].textContent = e.target.value;\n      } else {\n        tasks.forEach((task) => {\n          if (task.id === id) {\n            task.title = e.target.value;\n          }\n        });\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[0].style.display = \"block\";\n        e.target.parentElement.children[0].textContent = e.target.value;\n      }\n    }\n  };\n\n  const handleInputBlur = (e, id) => {\n    if (e.target.value === \"\" || e.target.value === \" \") {\n      alert(\"ERROR: Task cannot be blank.\");\n      e.target.value = \"Please edit me.\";\n      tasks.forEach((task) => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[0].style.display = \"block\";\n      e.target.parentElement.children[0].textContent = e.target.value;\n    } else {\n      tasks.forEach((task) => {\n        if (task.id === id) {\n          task.title = e.target.value;\n        }\n      });\n      e.target.style.display = \"none\";\n      e.target.parentElement.children[0].style.display = \"block\";\n      e.target.parentElement.children[0].textContent = e.target.value;\n    }\n  };\n\n  const deleteTask = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setTaskCount(taskCount - 1);\n      const updatedTasks = tasks.filter((task) => {\n        return task.id !== id;\n      });\n      setTasks(updatedTasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    }\n  };\n\n  const openModal = (e) => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n\n    modalFull.setAttribute(\n      \"class\",\n      `${e.target.parentElement.parentElement.id} modal-full`\n    );\n\n    let modalTask = modalFull.getAttribute(\"class\");\n\n    tasks.forEach((task) => {\n      if (task.id + \" modal-full\" === modalTask) {\n        modalTitle.value = task.title;\n        modalDescription.value = task.description;\n        modalDate.value = task.dueDate;\n      }\n    });\n\n    modalFull.style.display = \"block\";\n  };\n\n  const closeModal = (e) => {\n    const modalFull = document.querySelector(\".modal-full\");\n    modalFull.style.display = \"none\";\n  };\n\n  const submitModal = (e) => {\n    const modalFull = document.querySelector(\".modal-full\");\n    const modalTitle = document.querySelector(\".modal-title-input\");\n    const modalDescription = document.querySelector(\".modal-description-input\");\n    const modalDate = document.querySelector(\".modal-duedate-input\");\n\n    let modalTask = modalFull.getAttribute(\"class\");\n\n    if (modalTitle.value === \"\" || modalTitle.value === \" \") {\n      alert(\"ERROR: Task title cannot be blank.\");\n    } else {\n      const updatedTasks = tasks.map((task) => {\n        if (modalTask === task.id + \" modal-full\") {\n          return {\n            ...task,\n            title: modalTitle.value,\n            description: modalDescription.value,\n            dueDate: modalDate.value,\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n      console.log(updatedTasks);\n      modalFull.style.display = \"none\";\n    }\n  };\n\n  const taskList = tasks.map((task) => {\n    if (\n      (!task.completed &&\n        ((task.important === true && activeProject === \"Important\") ||\n          (task.dueDate === todaysDate(\"-\") && activeProject === \"Today\") ||\n          activeProject === \"All\")) ||\n      (task.completed && activeProject === \"Completed\") ||\n      activeProject === task.project\n    ) {\n      return (\n        <Task\n          id={task.id}\n          title={task.title}\n          completed={task.completed}\n          important={task.important}\n          dueDate={task.dueDate}\n          description={task.description}\n          handleImportance={handleImportance}\n          handleCompleted={handleCompleted}\n          editTask={editTask}\n          handleTaskInput={handleTaskInput}\n          handleInputBlur={handleInputBlur}\n          deleteTask={deleteTask}\n          openModal={openModal}\n        />\n      );\n    }\n  });\n\n  const completedList = tasks.map((task) => {\n    if (task.project === activeProject && task.completed === true) {\n      return (\n        <Task\n          id={task.id}\n          title={task.title}\n          completed={task.completed}\n          important={task.important}\n          dueDate={task.dueDate}\n          description={task.description}\n          handleImportance={handleImportance}\n          handleCompleted={handleCompleted}\n          editTask={editTask}\n          handleTaskInput={handleTaskInput}\n          handleInputBlur={handleInputBlur}\n          deleteTask={deleteTask}\n          openModal={openModal}\n        />\n      );\n    }\n  });\n\n  /*const filterList = FILTER_MAP.map((name) => (\n    <TopNav name={name} setFilter={setFilter} isPressed={name === filter} />\n  ));*/\n\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  return (\n    <div className=\"app\">\n      <Navigation>\n        <ProjectNav>\n          {projects.map((project, index) => {\n            if (index === 0) {\n              return (\n                <li className=\"project-nav-item\" onClick={handleProjectClick}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"type-project\"\n                      placeholder=\"i.e. Summer Chores\"\n                      ref={(input) => input && input.focus()}\n                      onKeyPress={handleProjectTitle}\n                      onBlur={handleProjectTitleBlur}\n                    />\n                    <span className=\"set-project\"></span>\n                  </div>\n                </li>\n              );\n            } else {\n              return (\n                <li className=\"project-nav-item\" onClick={handleProjectClick}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"type-project\"\n                      placeholder=\"i.e. Summer Chores\"\n                      ref={(input) => input && input.focus()}\n                      onKeyPress={handleProjectTitle}\n                    />\n                    <span className=\"set-project\"></span>\n                  </div>\n                  <button className=\"project-delete\" onClick={deleteProject}>\n                    <i className=\"fa-solid fa-trash\"></i>\n                  </button>\n                </li>\n              );\n            }\n          })}\n        </ProjectNav>\n        <button className=\"add-project\" onClick={addProject}>\n          Add Project\n        </button>\n      </Navigation>\n      <Project>\n        <ProjectHead>\n          <ProjectTitle\n            onClick={editProject}\n            activeProject={activeProject}\n            handleProjectInput={handleProjectInput}\n            handleProjectBlur={handleProjectBlur}\n            completedCount={completedTaskCount}\n            importantCount={importantCount}\n            taskCount={taskCount}\n          />\n          {activeProject === \"All\" ||\n          activeProject === \"Important\" ||\n          activeProject === \"Completed\" ||\n          activeProject === \"Today\" ||\n          activeProject === \"This Week\" ? (\n            <InputTask\n              activeProject={true}\n              onClick={addTask}\n              disabled={true}\n              onKeyPress={(e) => (e.key === \"Enter\" ? addTask() : \"\")}\n            />\n          ) : (\n            <InputTask\n              activeProject={false}\n              onClick={addTask}\n              disabled={false}\n              onKeyPress={(e) => (e.key === \"Enter\" ? addTask() : \"\")}\n            />\n          )}\n        </ProjectHead>\n        <div className=\"tasklist\">\n          <Tasklist>{taskList}</Tasklist>\n          {activeProject !== \"All\" &&\n          activeProject !== \"Today\" &&\n          activeProject !== \"This Week\" &&\n          activeProject !== \"Important\" &&\n          activeProject !== \"Completed\" &&\n          tasks.map(\n            (task) => task.completed && task.project === activeProject\n          ) ? (\n            <Completed>{completedList}</Completed>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </Project>\n      <Modal closeModal={closeModal} submitModal={submitModal} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}