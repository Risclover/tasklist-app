{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sara0\\\\HTML\\\\Works-in-Progress\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport Important from \"./components/project/Important\";\nimport Completed from \"./components/project/Completed\";\nimport e from \"express\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(\"Tasklist\");\n  const [isStar, setIsStar] = useState(false);\n\n  const handleTopNavClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddProject = e => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  const handleProjectEdit = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const allProjectItems = document.querySelectorAll(\".project-nav-item\");\n    allProjectItems.forEach(project => {});\n\n    if (activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\") {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n    }\n  };\n\n  const handleProjectInput = e => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".project-nav-item\");\n\n    if (e.key === \"Enter\") {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach(item => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach(task => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n      console.log(tasks);\n    }\n  };\n\n  const handleProjectTitle = e => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\");\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectClick = e => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: tasks.length,\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      project: activeProject,\n      important: false,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    console.log(newTask);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          important: !task.important\n        };\n      }\n\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(updatedTasks);\n  };\n\n  const handleCompleted = id => {\n    const updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(updatedTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      children: [/*#__PURE__*/_jsxDEV(TopNav, {\n        children: navItems.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            onClick: handleTopNavClick,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectNav, {\n        children: projects.map(project => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"project-nav-item\",\n            onClick: handleProjectClick,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"type-project\",\n              placeholder: \"i.e. Summer Chores\",\n              onKeyPress: handleProjectTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"set-project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-project\",\n        onClick: handleAddProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Project, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectHead, {\n        children: [/*#__PURE__*/_jsxDEV(ProjectTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"project-title\",\n            onClick: handleProjectEdit,\n            children: activeProject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onKeyPress: handleProjectInput,\n            type: \"text\",\n            className: \"edit-project-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), activeProject === \"All\" || activeProject === \"Important\" || activeProject === \"Completed\" || activeProject === \"Today\" || activeProject === \"This Week\" ? /*#__PURE__*/_jsxDEV(InputTask, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"type-task\",\n            disabled: true,\n            placeholder: \"Cannot add task right now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task\",\n            onClick: handleAddTask,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputTask, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"type-task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task\",\n            onClick: handleAddTask,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tasklist, {\n        children: tasks.map(task => {\n          if (activeProject === \"Important\") {\n            if (task.important === true) {\n              return /*#__PURE__*/_jsxDEV(Task, {\n                task: task,\n                tasks: tasks,\n                id: task.id,\n                title: task.title,\n                description: task.description,\n                dueDate: task.duedate,\n                completed: task.completed,\n                important: task.important,\n                children: [/*#__PURE__*/_jsxDEV(Completed, {\n                  onClick: handleCompleted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Important, {\n                  id: task.id,\n                  onClick: () => handleImportance(task.id),\n                  isStar: isStar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this);\n            }\n          } else if (activeProject === \"Completed\") {\n            if (task.completed === true) {\n              /*#__PURE__*/\n              _jsxDEV(Task, {\n                task: task,\n                tasks: tasks,\n                id: task.id,\n                title: task.title,\n                description: task.description,\n                dueDate: task.duedate,\n                completed: task.completed,\n                important: task.important,\n                children: /*#__PURE__*/_jsxDEV(Important, {\n                  id: task.id,\n                  onClick: () => handleImportance(task.id),\n                  isStar: isStar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this);\n            }\n          } else if (activeProject === \"All\") {\n            return /*#__PURE__*/_jsxDEV(Task, {\n              task: task,\n              tasks: tasks,\n              id: task.id,\n              title: task.title,\n              description: task.description,\n              dueDate: task.duedate,\n              completed: task.completed,\n              important: task.important,\n              children: [/*#__PURE__*/_jsxDEV(Completed, {\n                onChange: handleCompleted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Important, {\n                id: task.id,\n                onClick: () => handleImportance(task.id),\n                isStar: isStar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this);\n          } else {\n            if (task.project === activeProject) {\n              return /*#__PURE__*/_jsxDEV(Task, {\n                title: task.title,\n                description: task.description,\n                dueDate: task.duedate,\n                important: task.important,\n                completed: task.completed,\n                id: task.id,\n                children: [/*#__PURE__*/_jsxDEV(Completed, {\n                  onChange: handleCompleted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Important, {\n                  id: task.id,\n                  onClick: () => handleImportance(task.id),\n                  isStar: isStar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this);\n            }\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RmqC6EPFTqQpyDlxd5HrWZuFFGU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navigation","Project","TopNav","ProjectNav","ProjectHead","ProjectTitle","InputTask","Tasklist","Task","Important","Completed","e","navItems","App","tasks","setTasks","projects","setProjects","activeProject","setActiveProject","isStar","setIsStar","handleTopNavClick","target","textContent","handleAddProject","newProject","document","querySelector","handleProjectEdit","projectTitleInput","projectTitle","allProjectItems","querySelectorAll","forEach","project","alert","style","display","handleProjectInput","projectNavItems","key","value","item","task","console","log","handleProjectTitle","parentElement","children","handleProjectClick","handleAddTask","inputTask","newTask","id","length","title","description","duedates","important","completed","focus","handleImportance","updatedTasks","map","handleCompleted","duedate"],"sources":["C:/Users/sara0/HTML/Works-in-Progress/todo-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport Navigation from \"./components/navigation/Navigation\";\nimport Project from \"./components/project/Project\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport ProjectNav from \"./components/navigation/ProjectNav\";\nimport ProjectHead from \"./components/project/ProjectHead\";\nimport ProjectTitle from \"./components/project/ProjectTitle\";\nimport InputTask from \"./components/project/InputTask\";\nimport Tasklist from \"./components/project/Tasklist\";\nimport Task from \"./components/project/Task\";\nimport Important from \"./components/project/Important\";\nimport Completed from \"./components/project/Completed\";\nimport e from \"express\";\n\nconst navItems = [\"All\", \"Important\", \"Today\", \"This Week\", \"Completed\"];\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [activeProject, setActiveProject] = useState(\"Tasklist\");\n  const [isStar, setIsStar] = useState(false);\n\n  const handleTopNavClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddProject = (e) => {\n    const newProject = document.querySelector(\".project-nav-item\");\n    setProjects([...projects, newProject]);\n  };\n\n  const handleProjectEdit = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const allProjectItems = document.querySelectorAll(\".project-nav-item\");\n    allProjectItems.forEach((project) => {});\n    if (\n      activeProject === \"All\" ||\n      activeProject === \"Important\" ||\n      activeProject === \"Completed\" ||\n      activeProject === \"Today\" ||\n      activeProject === \"This Week\"\n    ) {\n      alert(\"Cannot change titles of categories that are not user-created.\");\n    } else {\n      projectTitle.style.display = \"none\";\n      projectTitleInput.style.display = \"block\";\n    }\n  };\n\n  const handleProjectInput = (e) => {\n    const projectTitleInput = document.querySelector(\".edit-project-title\");\n    const projectTitle = document.querySelector(\".project-title\");\n    const projectNavItems = document.querySelectorAll(\".project-nav-item\");\n\n    if (e.key === \"Enter\") {\n      projectTitle.textContent = projectTitleInput.value;\n      projectTitleInput.style.display = \"none\";\n      projectTitle.style.display = \"block\";\n      projectNavItems.forEach((item) => {\n        if (item.textContent === activeProject) {\n          item.textContent = projectTitleInput.value;\n        }\n      });\n      tasks.forEach((task) => {\n        if (task.project === activeProject) {\n          task.project = projectTitleInput.value;\n        }\n      });\n      setActiveProject(projectTitleInput.value);\n      console.log(tasks);\n    }\n  };\n\n  const handleProjectTitle = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value === \"\" || e.target.value === \" \") {\n        alert(\n          \"ERROR: Project title cannot be blank. Please name your new project - you can always rename it later!\"\n        );\n      } else {\n        e.target.style.display = \"none\";\n        e.target.parentElement.children[1].style.display = \"block\";\n        e.target.parentElement.children[1].textContent = e.target.value;\n        setActiveProject(e.target.value);\n      }\n    }\n  };\n\n  const handleProjectClick = (e) => {\n    setActiveProject(e.target.textContent);\n  };\n\n  const handleAddTask = () => {\n    const inputTask = document.querySelector(\".type-task\");\n    const newTask = {\n      id: tasks.length,\n      title: inputTask.value,\n      description: \"\",\n      duedates: \"\",\n      project: activeProject,\n      important: false,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n    console.log(newTask);\n    inputTask.focus();\n    inputTask.value = \"\";\n  };\n\n  const handleImportance = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, important: !task.important };\n      }\n      setIsStar(!isStar);\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(updatedTasks);\n  };\n\n  const handleCompleted = (id) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    console.log(updatedTasks);\n  };\n\n  return (\n    <div className=\"app\">\n      <Navigation>\n        <TopNav>\n          {navItems.map((item) => {\n            return (\n              <li className=\"nav-item\" onClick={handleTopNavClick}>\n                {item}\n              </li>\n            );\n          })}\n        </TopNav>\n        <ProjectNav>\n          {projects.map((project) => {\n            return (\n              <li className=\"project-nav-item\" onClick={handleProjectClick}>\n                <input\n                  type=\"text\"\n                  className=\"type-project\"\n                  placeholder=\"i.e. Summer Chores\"\n                  onKeyPress={handleProjectTitle}\n                />\n                <span className=\"set-project\"></span>\n              </li>\n            );\n          })}\n        </ProjectNav>\n        <button className=\"add-project\" onClick={handleAddProject}>\n          Add Project\n        </button>\n      </Navigation>\n      <Project>\n        <ProjectHead>\n          <ProjectTitle>\n            <h1 className=\"project-title\" onClick={handleProjectEdit}>\n              {activeProject}\n            </h1>\n            <input\n              onKeyPress={handleProjectInput}\n              type=\"text\"\n              className=\"edit-project-title\"\n            />\n          </ProjectTitle>\n          {activeProject === \"All\" ||\n          activeProject === \"Important\" ||\n          activeProject === \"Completed\" ||\n          activeProject === \"Today\" ||\n          activeProject === \"This Week\" ? (\n            <InputTask>\n              <input\n                type=\"text\"\n                className=\"type-task\"\n                disabled\n                placeholder=\"Cannot add task right now.\"\n              />\n              <button className=\"add-task\" onClick={handleAddTask}>\n                Add Task\n              </button>\n            </InputTask>\n          ) : (\n            <InputTask>\n              <input type=\"text\" className=\"type-task\" />\n              <button className=\"add-task\" onClick={handleAddTask}>\n                Add Task\n              </button>\n            </InputTask>\n          )}\n        </ProjectHead>\n        <Tasklist>\n          {tasks.map((task) => {\n            if (activeProject === \"Important\") {\n              if (task.important === true) {\n                return (\n                  <Task\n                    task={task}\n                    tasks={tasks}\n                    id={task.id}\n                    title={task.title}\n                    description={task.description}\n                    dueDate={task.duedate}\n                    completed={task.completed}\n                    important={task.important}\n                  >\n                    <Completed onClick={handleCompleted} />\n                    <Important\n                      id={task.id}\n                      onClick={() => handleImportance(task.id)}\n                      isStar={isStar}\n                    />\n                  </Task>\n                );\n              }\n            } else if (activeProject === \"Completed\") {\n              if (task.completed === true) {\n                <Task\n                  task={task}\n                  tasks={tasks}\n                  id={task.id}\n                  title={task.title}\n                  description={task.description}\n                  dueDate={task.duedate}\n                  completed={task.completed}\n                  important={task.important}\n                >\n                  <Important\n                    id={task.id}\n                    onClick={() => handleImportance(task.id)}\n                    isStar={isStar}\n                  />\n                </Task>;\n              }\n            } else if (activeProject === \"All\") {\n              return (\n                <Task\n                  task={task}\n                  tasks={tasks}\n                  id={task.id}\n                  title={task.title}\n                  description={task.description}\n                  dueDate={task.duedate}\n                  completed={task.completed}\n                  important={task.important}\n                >\n                  <Completed onChange={handleCompleted} />\n                  <Important\n                    id={task.id}\n                    onClick={() => handleImportance(task.id)}\n                    isStar={isStar}\n                  />\n                </Task>\n              );\n            } else {\n              if (task.project === activeProject) {\n                return (\n                  <Task\n                    title={task.title}\n                    description={task.description}\n                    dueDate={task.duedate}\n                    important={task.important}\n                    completed={task.completed}\n                    id={task.id}\n                  >\n                    <Completed onChange={handleCompleted} />\n\n                    <Important\n                      id={task.id}\n                      onClick={() => handleImportance(task.id)}\n                      isStar={isStar}\n                    />\n                  </Task>\n                );\n              }\n            }\n          })}\n        </Tasklist>\n      </Project>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}